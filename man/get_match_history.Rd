% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_match_history.R
\name{get_match_history}
\alias{get_match_history}
\title{A list of Matches}
\usage{
get_match_history(hero_id = NULL, game_mode = NULL, skill = NULL,
  date_min = NULL, date_max = NULL, min_players = NULL,
  account_id = NULL, league_id = NULL, start_at_match_id = NULL,
  matches_requested = NULL, tournament_games_only = NULL, language = "en",
  key = NULL)
}
\arguments{
\item{hero_id}{(optional) The hero id. A list of hero ids can be found
via the get_heroes function.}

\item{game_mode}{(optional) The game mode:
\itemize{
  \item 0 - None
  \item 1 - All Pick
  \item 2 - Captain's Mode
  \item 3 - Random Draft
  \item 4 - Single Draft
  \item 5 - All Random
  \item 6 - Intro
  \item 7 - Diretide
  \item 8 - Reverse Captain's Mode
  \item 9 - The Greeviling
  \item 10 - Tutorial
  \item 11 - Mid Only
  \item 12 - Least Played
  \item 13 - New Player Pool
  \item 14 - Compendium Matchmaking
  \item 16 - Captain's Draft
}
No 15 does not exist}

\item{skill}{(optional) Skill bracket.
\itemize{
\item 0 - Any
\item 1 - Normal
\item 2 - High
\item 3 - Very High
}}

\item{date_min}{(optional) Minimum date range for returned matches (Unix Timestamp).}

\item{date_max}{(optional) Maximum date range for returned matches (Unix Timestamp).}

\item{min_players}{(optional) Minimum number of players in match.}

\item{account_id}{(optional) Account ID.}

\item{league_id}{(optional) League ID.}

\item{start_at_match_id}{(optional) Matches equal or older than this ID.}

\item{matches_requested}{(optional) Amount of matches to return (defaults to 25).}

\item{tournament_games_only}{(optional) Binary (0 or 1). Whether to return tournament matches.}

\item{language}{The ISO639-1 language code for returning all the information in the corresponding
language. If the language is not supported, english will be returned. For a complete list of the
ISO639-1 language codes please visit \url{https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes}.}

\item{key}{The api key obtained from Steam. If you don't have one please visit
\url{https://steamcommunity.com/dev} in order to do so. For instructions on the correct way
to use this key please visit \url{https://github.com/LyzandeR/RDota2} and check the readme file.
You can also see the examples. A key can be made available to all the functions by using
\code{key_actions}. The key argument in individual functions should only be used in case the
user needs to work with multiple keys.}
}
\value{
A dota_api object containing the elements described in the details.
}
\description{
Alist of matches based on various parameters.
}
\details{
A list will be returned that contains three elements. The content, the url and the
response received from the api.

The content element of the list is a list that contains information about the matches.
Each element of the matches list is a game. Each game consists of a list of (some) of
the following sections:

\itemize{
  \item \strong{players:} A list of lists containing information about the players.
  \item \strong{lobby_id:} The lobby id.
  \item \strong{match_id:} The match id.
  \item \strong{spectators:} The number of spectators.
  \item \strong{series_id:} The series id.
  \item \strong{game_number:} The game number.
  \item \strong{league_id:} The league id.
  \item \strong{stream_delay_s:} The stream delay in secs.
  \item \strong{radiant_series_wins:} Radiant series wins.
  \item \strong{dire_series_wins:} Dire series wins.
  \item \strong{series_type:} Series type.
  \item \strong{league_series_id:} The league series id.
  \item \strong{league_game_id:} The league game id.
  \item \strong{stage_name:} The name of the stage.
  \item \strong{league_tier:} League tier.
  \item \strong{scoreboard:} A huge list containing scoreboard information. Scoreboard might
  be missing from some of the games.
}
}
\section{Steam API Documentation}{

\url{https://wiki.teamfortress.com/wiki/WebAPI/GetMatchHistory}
}
\examples{
\dontrun{
get_match_history()
get_match_history(language = 'en', key = NULL)
get_match_history(language = 'en', key = 'xxxxxxxxxxx')
}

}

